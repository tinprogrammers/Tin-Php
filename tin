#!/usr/bin/env php
<?php

// --- Colors for CLI ---
$C = [
  'cyan' => "\033[1;36m",
  'green' => "\033[1;32m",
  'red' => "\033[1;31m",
  'reset' => "\033[0m"
];

echo "{$C['cyan']}‚ú® TinProgrammers MVC Generator ‚ú®{$C['reset']}\n\n";

// --- Project name ---
$projectName = $argv[1] ?? null;

if (!$projectName) {
  echo "{$C['red']}‚ùå Usage: tin <project-name>{$C['reset']}\n";
  echo "Example: tin myproject\n";
  exit(1);
}

// --- PHP version check ---
if (version_compare(PHP_VERSION, '8.0.0', '<')) {
  echo "{$C['red']}‚ùå PHP 8.0 or higher required! Current: " . PHP_VERSION . "{$C['reset']}\n";
  exit(1);
}

// --- Composer check ---
if (!shell_exec('composer --version')) {
  echo "{$C['red']}‚ùå Composer not found! Install Composer first.{$C['reset']}\n";
  exit(1);
}

// --- Prepare directories ---
$targetDir = getcwd() . '/' . $projectName;

if (is_dir($targetDir)) {
  echo "{$C['red']}‚ùå Directory already exists: $projectName{$C['reset']}\n";
  exit(1);
}

echo "üìÅ Creating project structure...\n";
recurse_copy(__DIR__ . '/skeleton', $targetDir);

chdir($targetDir);

// --- .env rename ---
if (file_exists('.env.example') && !file_exists('.env')) {
  rename('.env.example', '.env');
  echo "üîë .env file created from .env.example\n";
}

// --- Composer install ---
echo "üì¶ Installing dependencies with Composer...\n";
exec('composer install');

// --- Git init ---
echo "üêô Initializing Git repository...\n";
exec('git init');
exec('git add .');
exec('git commit -m "Initial commit üéâ"');

// --- Done! ---
echo "{$C['green']}‚úÖ Project '{$projectName}' created successfully!{$C['reset']}\n";
echo "üëâ Next steps:\n";
echo "   cd {$projectName}\n";
echo "   php -S localhost:8000 -t public\n";
echo "   Happy coding meri dev queen! ü´∂‚ú®\n";

// --- Function to copy skeleton ---
function recurse_copy($src, $dst) {
  $dir = opendir($src);
  @mkdir($dst, 0777, true);
  while (false !== ($file = readdir($dir))) {
    if (($file != '.') && ($file != '..')) {
      if (in_array($file, ['.git', 'node_modules'])) continue; // skip unwanted
      if (is_dir($src . '/' . $file)) {
        recurse_copy($src . '/' . $file, $dst . '/' . $file);
      } else {
        copy($src . '/' . $file, $dst . '/' . $file);
      }
    }
  }
  closedir($dir);
}
